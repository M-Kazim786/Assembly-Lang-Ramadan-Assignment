; Input two numbers then show all numbers between these two numbers.

.model small
.stack 100h
.data  

    prompt1 db 'Enter First number:$'
    prompt2 db 0Ah,0Dh,'Enter Second number:$'
    msg db 0Ah,0Dh,'All the numbers between these two numbers are: $'
    wr db 0Ah,0Dh,'Invalid Input!!!$'
    number1 dw 0 
    number2 dw 0  
    
.code 

inputNum macro num
     local dgt,warn,done
     
     push ax
     push bx
     push cx
     
     mov bx,0
     mov cx,10
     
     dgt:
     mov ah,1
     int 21h
     
     cmp al,13
     je done
     
     cmp al,48
     jl warn
     
     cmp al,57
     jg warn
     
     sub al,48
     cbw       
     
     xchg ax,bx
     mul cx
     xchg ax,bx
     
     add bx,ax
     
     jmp dgt
     
     warn:
     lea dx,wr
     mov ah,9
     int 21h
     
     mov bx,0  
     
     done:
     mov num,bx
     
     pop cx
     pop bx
     pop ax

endm

printNum proc
     mov bp,sp
     add bp,2
     
     push ax
     push bx
     push cx
     push dx
     
     mov ax,[bp]
     mov bx,0Ah
     mov cx,0
     mov dx,0
     
     divLoop:
     div bx
     push dx
     mov dx,0
     inc cx
     
     cmp ax,0
     jne divLoop
     
     showLoop:
     pop dx
     add dl,48
     mov ah,2
     int 21h
     
     loop showLoop
     
     pop dx
     pop cx
     pop bx
     pop ax

     ret
    
printNum endp

main proc
     mov ax,@data
     mov ds,ax
     
     lea dx,prompt1
     mov ah,9
     int 21h
     
     inputNum number1  
     cmp number1,0
     je exit
     
     lea dx,prompt2
     mov ah,9
     int 21h   
     
     inputNum number2
     cmp number2,0
     je exit    
     
     mov bx,number1
     mov dx,number2
     
     cmp dx,bx
     jb exit 
     
     push dx              
     lea dx,msg
     mov ah,9
     int 21h 
     pop dx
     
     sub dx,bx
     mov cx,dx
             
     L1:
     inc bx
     mov dx,bx 
     
     cmp dx,number2
     je checkComma
     
     push dx
     call printNum 
     
     checkComma :
     cmp cx,2
     je exit  
     
     push dx
     mov dl,','
     mov ah,2
     int 21h
     pop dx
     
     loop L1  
     

     exit:
     mov ah,4ch
     int 21h
  
    
main endp
end main
